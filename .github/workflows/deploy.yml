name: CI/CD - Backend

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  backend:
    name: Build & Deploy Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        if: contains(fromJSON('["build"]'), toJSON(hashFiles('package.json')))

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker build -t quicktask-api -f Dockerfile .
          docker tag quicktask-api ${{ secrets.DOCKER_HUB_USERNAME }}/quicktask-api:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/quicktask-api:latest
          echo "Docker image pushed successfully"

      - name: Deploy to Render
        run: |
          response=$(curl -s -o response.txt -w "%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys)
          if [ "$response" -ne 201 ]; then
            echo "Deployment failed with status $response"
            cat response.txt
            exit 1
          else
            echo "Deployment triggered successfully"
          fi